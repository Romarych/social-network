{"version":3,"file":"static/js/999.4e9cf3d7.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/common/Paginator/Pagination.module.css?df99","components/common/Paginator/Pagination.tsx","webpack://social-network/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","redux/users-selectors.ts","components/Users/UserSearchForm/UserSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Pagination_page__pon+n\",\"selectedPage\":\"Pagination_selectedPage__SKRhW\",\"paginator\":\"Pagination_paginator__ki8fv\",\"btn\":\"Pagination_btn__Hy26O\"};","import React, {FC, useState} from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\n\r\ntype PropsType = {\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    portionSize?: number\r\n}\r\n\r\nconst Pagination: FC<PropsType> = ({currentPage, onPageChanged = x => x, totalItemsCount, pageSize, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const prev = \"< Prev\"\r\n    const next = \"Next >\"\r\n    \r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    // let [portionNumber, setPortionNumber] = useState<number | null>(null) // если useState === null\r\n    // if (portionNumber === null) portionNumber = 1\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {/* {pages.filter(p => p <= currentPage + 5 && p >= currentPage - 5).map((p) => {\r\n                return <span  className={`${currentPage === p && s.selectedPage } ${s.page}`}\r\n                key={p} onClick={(e) => {onPageChanged(p)}}>{p}</span>\r\n            })} */}\r\n\r\n            {portionNumber > 1 && <button className={s.btn} onClick={ () => {setPortionNumber(portionNumber - 1)}}>{prev}</button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\r\n               return <span  className={`${currentPage === p && s.selectedPage } ${s.page}`}\r\n               key={p} onClick={(e) => {onPageChanged(p)}}>{p}</span>\r\n            })}\r\n            {portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>{next}</button>}\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"User_users__wOmTD\",\"photo\":\"User_photo__Q+DdV\",\"flex\":\"User_flex__kIygj\",\"avatar\":\"User_avatar__B37xj\"};","import React, { FC } from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport userPhoto from \"../../../assets/images/avatar.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number> \r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet User: FC<PropsType> = ({user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div className={s.users}>\r\n            <div className={s.photo} >\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img className={s.avatar} src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\" />\r\n                </NavLink>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {follow(user.id)}}>Follow</button>}\r\n            </div>\r\n            <div className={s.flex}>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n            <div className={s.flex}>\r\n                <div >{\"u.location.city\"}</div>\r\n                <div>{\"u.location.country\"}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;","import {AppStateType} from \"./redux-store\"\r\n\r\nexport const getUsersData = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n    \r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n\r\n","import { FC } from \"react\";\r\nimport { Field, Form, Formik, FormikHelpers } from \"formik\";\r\nimport { FilterType } from \"../../../redux/users-reduser\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUsersFilter } from \"../../../redux/users-selectors\";\r\n\r\nconst userSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\ntype PropsTypes = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype FormTypes = {\r\n    term: string\r\n    friend: string \r\n}\r\n\r\nconst UserSearchForm: FC<PropsTypes> = ({ onFilterChanged }) => {\r\nconst filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormTypes, { setSubmitting }: FormikHelpers<{ term: string; friend: string; }>) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === \"null\" ? null : values.friend === \"true\" ? true : false\r\n        }\r\n\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n   \r\n\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term, friend: String(filter.friend) }}\r\n            validate={userSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name='term' />\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\nexport default UserSearchForm","import React, { FC, useEffect } from \"react\";\r\nimport Pagination from \"../common/Paginator/Pagination\";\r\nimport User from \"./User/User\";\r\nimport UserSearchForm from \"./UserSearchForm/UserSearchForm\";\r\nimport { FilterType, follow, getUsers, unfollow } from \"../../redux/users-reduser\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCurrentPage, getFollowingInProgress, getPageSize, getTotalUsersCount, getUsersData, getUsersFilter } from \"../../redux/users-selectors\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nexport const Users: FC = () => {\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const users = useSelector(getUsersData)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n   \r\n    const dispatch = useDispatch<any>()\r\n\r\n    let navigate = useNavigate();\r\n    const { search } = useLocation()\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(search)\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = { term: filter.term, friend: filter.friend}\r\n    \r\n        if (params.get('page')) actualPage = Number(params.get('page')) \r\n        if (params.get('term')) actualFilter = {...actualFilter, term: params.get('term') as string}\r\n        if (params.get('friend')) actualFilter = {...actualFilter, friend: params.get('friend') == 'true' ? true : params.get('friend') == 'false' ? false : null}\r\n      \r\n        dispatch(getUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n   \r\n    useEffect(() => {\r\n        const query: any = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        navigate(`/users?${currentPage && `page=${currentPage}`}${filter.term && `&term=${filter.term}`}${String(filter.friend) != 'null' ? `&friend=${filter.friend}` : ''}`)\r\n    }, [filter, currentPage])\r\n   \r\n    \r\n\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n        dispatch(getUsers(currentPage, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const acceptUnfollo = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    const acceptFollo = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <UserSearchForm onFilterChanged={onFilterChanged} />\r\n            <Pagination currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n            {users.map(user => <User key={user.id} user={user} followingInProgress={followingInProgress} unfollow={acceptUnfollo} follow={acceptFollo} />)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { FC } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {Users} from \"./Users\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport { getIsFetching } from \"../../redux/users-selectors\"\r\n\r\nconst UsersPage: FC = React.memo(() => {\r\n    const isFetching = useSelector(getIsFetching)\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader /> : null}\r\n            <Users />\r\n        </>\r\n    )\r\n\r\n})\r\n\r\nexport default UsersPage\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["currentPage","onPageChanged","x","totalItemsCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","onClick","filter","p","map","e","user","followingInProgress","unfollow","follow","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","name","status","getUsersData","state","usersPage","users","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","userSearchFormValidate","values","onFilterChanged","useSelector","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","isSubmitting","type","as","value","Users","dispatch","useDispatch","navigate","useNavigate","search","useLocation","useEffect","params","URLSearchParams","actualPage","actualFilter","get","Number","getUsers","query","page","acceptUnfollo","userId","acceptFollo","React","Preloader"],"sourceRoot":""}