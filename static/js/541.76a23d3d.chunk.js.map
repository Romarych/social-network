{"version":3,"file":"static/js/541.76a23d3d.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/common/Paginator/Pagination.module.css?df99","components/common/Paginator/Pagination.tsx","webpack://social-network/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Pagination_page__pon+n\",\"selectedPage\":\"Pagination_selectedPage__SKRhW\",\"paginator\":\"Pagination_paginator__ki8fv\",\"btn\":\"Pagination_btn__Hy26O\"};","import React, {FC, useState} from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    portionSize?: number\r\n}\r\n\r\nconst Pagination: FC<PropsType> = ({currentPage, onPageChanged = x => x, totalItemsCount, pageSize, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const prev = \"< Prev\"\r\n    const next = \"Next >\"\r\n    \r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    // let [portionNumber, setPortionNumber] = useState<number | null>(null) // если useState === null\r\n    // if (portionNumber === null) portionNumber = 1\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {/* {pages.filter(p => p <= currentPage + 5 && p >= currentPage - 5).map((p) => {\r\n                return <span  className={`${currentPage === p && s.selectedPage } ${s.page}`}\r\n                key={p} onClick={(e) => {onPageChanged(p)}}>{p}</span>\r\n            })} */}\r\n\r\n            {portionNumber > 1 && <button className={s.btn} onClick={ () => {setPortionNumber(portionNumber - 1)}}>{prev}</button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\r\n               return <span  className={`${currentPage === p && s.selectedPage } ${s.page}`}\r\n               key={p} onClick={(e) => {onPageChanged(p)}}>{p}</span>\r\n            })}\r\n            {portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>{next}</button>}\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"User_users__wOmTD\",\"photo\":\"User_photo__Q+DdV\",\"flex\":\"User_flex__kIygj\",\"avatar\":\"User_avatar__B37xj\"};","import React, { FC } from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport userPhoto from \"../../../assets/images/avatar.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number> \r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet User: FC<PropsType> = ({user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div className={s.users}>\r\n            <div className={s.photo} >\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img className={s.avatar} src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\" />\r\n                </NavLink>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {follow(user.id)}}>Follow</button>}\r\n            </div>\r\n            <div className={s.flex}>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n            <div className={s.flex}>\r\n                <div >{\"u.location.city\"}</div>\r\n                <div>{\"u.location.country\"}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;","import React, { FC } from \"react\";\r\nimport Pagination from \"../common/Paginator/Pagination\";\r\nimport User from \"./User/User\";\r\nimport {UserType} from \"../../types/types\"\r\n\r\ntype PropTypes = {\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet Users: FC<PropTypes> = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div >\r\n            <Pagination currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n            {users.map(user => <User key={user.id} user={user} followingInProgress={followingInProgress} unfollow={unfollow} follow={follow} />)}\r\n            <Pagination currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {AppStateType} from \"./redux-store\"\r\n\r\nexport const getUsersData = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n    \r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React, { FC, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { getUsers, follow, unfollow } from \"../../redux/users-reduser\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport { getUsersData, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../../redux/users-selectors\"\r\nimport { UserType } from \"../../types/types\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsTypes = {\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    pageSize: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsTypes = {    \r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\ntype PropsTypes = MapStatePropsTypes & MapDispatchPropsTypes \r\n\r\nconst UsersContainer: FC<PropsTypes> = ({currentPage, pageSize, getUsers, isFetching, ...props}) => {\r\n    useEffect( () => {\r\n        getUsers(currentPage, pageSize)\r\n    }, [currentPage, pageSize, getUsers])\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n        getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader /> : null}\r\n            <Users {...props} onPageChanged={onPageChanged} currentPage={currentPage} pageSize={pageSize}/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsTypes => {\r\n    return {\r\n        users: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    // TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, TMergedProps = {} State = DefaultState\r\n    connect<MapStatePropsTypes, MapDispatchPropsTypes, {}, AppStateType>(mapStateToProps, {getUsers, follow, unfollow}),\r\n)(UsersContainer)\r\n\r\n\r\n\r\n\r\n"],"names":["currentPage","onPageChanged","x","totalItemsCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","onClick","filter","p","map","e","user","followingInProgress","unfollow","follow","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","name","status","totalUsersCount","users","getUsersData","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","compose","connect","getUsers","props","useEffect","Preloader"],"sourceRoot":""}