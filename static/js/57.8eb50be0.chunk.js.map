{"version":3,"file":"static/js/57.8eb50be0.chunk.js","mappings":"qNACA,EAAuB,yBAAvB,EAA+D,iCAA/D,EAA4G,8B,SCiC5G,EA/BmB,SAAC,GAGhB,IAHgG,IAA/EA,EAA8E,EAA9EA,YAAaC,EAAiE,EAAjEA,cAAeC,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,SAC1DC,GAD2F,EAAvBC,YACvDC,KAAKC,KAAKL,EAAkBC,IACzCK,EAAQ,GACHC,EAAI,EAAGA,GAAKL,EAAYK,IAC7BD,EAAME,KAAKD,GAWf,OACI,gBAAKE,UAAWC,EAAhB,SACKJ,EAAMK,QAAO,SAAAC,GAAC,OAAIA,GAAKd,EAAc,GAAKc,GAAKd,EAAc,KAAGe,KAAI,SAACD,GAClE,OAAO,iBAAOH,UAAS,UAAKX,IAAgBc,GAAKF,EAA1B,YAA6CA,GAC5DI,QAAS,SAACC,GAAOhB,EAAca,IADhC,SACsCA,GAAxCA,SCrBrB,EAAwB,oBAAxB,EAAoD,oBAApD,EAA+E,mBAA/E,EAA2G,qB,oBC8B3G,EA1BW,SAAC,GAAoD,IAAnDI,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,oBAAqBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC9C,OACI,iBAAKV,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAAC,KAAD,CAASU,GAAI,YAAcJ,EAAKK,GAAhC,UACI,gBAAKZ,UAAWC,EAAUY,IAA0B,MAArBN,EAAKO,OAAOC,MAAgBR,EAAKO,OAAOC,MAAQC,EAAWC,IAAI,OAEjGV,EAAKW,UACA,mBAAQC,SAAUX,EAAoBY,MAAK,SAAAR,GAAE,OAAIA,IAAOL,EAAKK,MAC3DP,QAAS,WAAOI,EAASF,EAAKK,KADhC,uBAEA,mBAAQO,SAAUX,EAAoBY,MAAK,SAAAR,GAAE,OAAIA,IAAOL,EAAKK,MAC3DP,QAAS,WAAOK,EAAOH,EAAKK,KAD9B,wBAGV,iBAAKZ,UAAWC,EAAhB,WACI,yBAAMM,EAAKc,QACX,yBAAMd,EAAKe,aAEf,iBAAKtB,UAAWC,EAAhB,WACI,yBAAO,qBACP,yBAAM,8B,uECXtB,EATY,SAAC,GAA8E,IAA7EZ,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,cAAeiC,EAAgD,EAAhDA,gBAAiB/B,EAA+B,EAA/BA,SAAUgC,EAAqB,EAArBA,MAAUC,GAAW,YACtF,OACI,4BACI,SAAC,EAAD,CAAYpC,YAAaA,EAAaC,cAAeA,EAAeC,gBAAiBgC,EAAiB/B,SAAUA,IAC/GgC,EAAMpB,KAAI,SAAAG,GAAI,OAAI,SAAC,GAAD,QAAoBA,KAAMA,GAAUkB,GAAzBlB,EAAKK,W,oBCRlCc,EAAe,SAACC,GACzB,OAAOA,EAAMC,UAAUJ,OAIdK,EAAc,SAACF,GACxB,OAAOA,EAAMC,UAAUpC,UAGdsC,EAAqB,SAACH,GAC/B,OAAOA,EAAMC,UAAUL,iBAGdQ,EAAiB,SAACJ,GAC3B,OAAOA,EAAMC,UAAUvC,aAId2C,EAAgB,SAACL,GAC1B,OAAOA,EAAMC,UAAUK,YAGdC,EAAyB,SAACP,GACnC,OAAOA,EAAMC,UAAUpB,qB,qDCc3B,GAAe2B,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAZkB,SAACT,GACnB,MAAO,CACHH,MAAOE,EAAaC,GACpBnC,SAAUqC,EAAYF,GACtBJ,gBAAiBO,EAAmBH,GACpCtC,YAAa0C,EAAeJ,GAC5BM,WAAYD,EAAcL,GAC1BnB,oBAAqB0B,EAAuBP,MAKvB,CAACU,SAAAA,EAAAA,GAAU3B,OAAAA,EAAAA,GAAQD,SAAAA,EAAAA,KADhD,EA7BuB,SAAC,GAA6D,IAA5DpB,EAA2D,EAA3DA,YAAaG,EAA8C,EAA9CA,SAAU6C,EAAoC,EAApCA,SAAUJ,EAA0B,EAA1BA,WAAeR,GAAW,aAChFa,EAAAA,EAAAA,YAAW,WACPD,EAAShD,EAAaG,KACvB,CAACH,EAAaG,IAMjB,OACI,gCACKyC,GAAa,SAACM,EAAA,EAAD,IAAgB,MAC9B,SAAC,GAAD,kBAAWd,GAAX,IAAkBnC,cAPJ,SAACD,GACnBgD,EAAShD,EAAaG,IAM8BH,YAAaA,EAAaG,SAAUA","sources":["webpack://social-network/./src/components/common/Paginator/Pagination.module.css?df99","components/common/Paginator/Pagination.jsx","webpack://social-network/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Pagination_page__pon+n\",\"selectedPage\":\"Pagination_selectedPage__SKRhW\",\"paginator\":\"Pagination_paginator__ki8fv\",\"btn\":\"Pagination_btn__Hy26O\"};","import React, {useState} from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\n\r\nconst Pagination = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    // const prev = \"<< Prev\"\r\n    // const next = \"Next >>\"\r\n    //\r\n    // let portionCount = Math.ceil(pagesCount / portionSize)\r\n    // let [portionNumber, setPortionNumber] = useState(1)\r\n    //\r\n    // let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    // let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {pages.filter(p => p <= currentPage + 5 && p >= currentPage - 5).map((p) => {\r\n                return <span  className={`${currentPage === p && s.selectedPage } ${s.page}`}\r\n                key={p} onClick={(e) => {onPageChanged(p)}}>{p}</span>\r\n            })}\r\n\r\n            {/*{portionNumber > 1 && <button className={s.btn} onClick={ () => {setPortionNumber(portionNumber - 1)}}>{prev}</button>}*/}\r\n            {/*{pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {*/}\r\n            {/*    return <span  className={`${currentPage === p && s.selectedPage } ${s.page}`}*/}\r\n            {/*    key={p} onClick={(e) => {onPageChanged(p)}}>{p}</span>*/}\r\n            {/*})}*/}\r\n            {/*{portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>{next}</button>}*/}\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"User_users__wOmTD\",\"photo\":\"User_photo__Q+DdV\",\"flex\":\"User_flex__kIygj\",\"avatar\":\"User_avatar__B37xj\"};","import React from \"react\";\r\nimport s from \"./User.module.css\";\r\nimport userPhoto from \"../../../assets/images/avatar.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div className={s.users}>\r\n            <div className={s.photo} >\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img className={s.avatar} src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\" />\r\n                </NavLink>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {follow(user.id)}}>Follow</button>}\r\n            </div>\r\n            <div className={s.flex}>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n            <div className={s.flex}>\r\n                <div >{\"u.location.city\"}</div>\r\n                <div>{\"u.location.country\"}</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Pagination from \"../common/Paginator/Pagination\";\r\nimport User from \"./User/User\";\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return (\r\n        <div >\r\n            <Pagination currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n            {users.map(user => <User key={user.id} user={user} {...props} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export const getUsersData = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { getUsers, follow, unfollow } from \"../../redux/users-reduser\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport { getUsersData, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../../redux/users-selectors\"\r\n\r\nconst UsersContainer = ({currentPage, pageSize, getUsers, isFetching, ...props}) => {\r\n    useEffect( () => {\r\n        getUsers(currentPage, pageSize)\r\n    }, [currentPage, pageSize])\r\n\r\n    const onPageChanged = (currentPage) => {\r\n        getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader /> : null}\r\n            <Users {...props} onPageChanged={onPageChanged} currentPage={currentPage} pageSize={pageSize}/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsers, follow, unfollow}),\r\n)(UsersContainer)\r\n\r\n\r\n\r\n\r\n"],"names":["currentPage","onPageChanged","totalItemsCount","pageSize","pagesCount","portionSize","Math","ceil","pages","i","push","className","s","filter","p","map","onClick","e","user","followingInProgress","unfollow","follow","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","name","status","totalUsersCount","users","props","getUsersData","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","compose","connect","getUsers","useEffect","Preloader"],"sourceRoot":""}